name: CI

on:
  push:
    branches:
    - main
    paths-ignore:
    - .editorconfig
    - .gitattributes
    - .gitignore
    - .prettierignore
    - LICENSE.md
    - README.md
    - nodemon.json

jobs:
  verify:
    name: Verify
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        cache: npm
        cache-dependency-path: package-lock.json
        node-version: 20
    - name: Install dependencies
      run: npm ci
    - name: Check formatting
      run: npm run fmt:check
    - name: Lint code
      run: npm run lint
    - name: Run unit tests
      run: npm test

  build:
    name: Build
    needs: [ verify ]
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        cache: npm
        cache-dependency-path: package-lock.json
        node-version: 20
    - name: Install dependencies
      run: npm ci
    - name: Build Chrome extension
      run: npm run build
    - name: Zip build artifact
      run: zip -r chrome-ext-aws-saml-sts.zip dist
    - name: Upload build artifact
      uses: actions/upload-artifact@v4
      with:
        name: chrome-ext-aws-saml-sts.zip
        path: chrome-ext-aws-saml-sts.zip

  release:
    name: Release?
    needs: [ build ]
    permissions:
      contents: write
      pull-requests: write
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Prepare a release
      id: release
      uses: google-github-actions/release-please-action@v4
      with:
        config-file: .github/release-please-config.json
        manifest-file: .github/release-please-manifest.json
        token: ${{ secrets.GITHUB_TOKEN }}
    - name: Download build artifact
      if: ${{ steps.release.outputs.release_created }}
      uses: actions/download-artifact@v4
      with:
        name: chrome-ext-aws-saml-sts.zip
        path: ${{ steps.release.outputs.tag_name }}.zip
    - name: Attach build artifact to release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      if: ${{ steps.release.outputs.release_created }}
      run: gh release upload ${{ steps.release.outputs.tag_name }} ${{ steps.release.outputs.tag_name }}.zip
